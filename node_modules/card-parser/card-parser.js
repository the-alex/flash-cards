var fs = require('fs');

var create_card = function (word, definition) {
  return {
    'word': word,
    'definition': definition
  };
};

// TODO: fails test2.txt on multiple instances of ' :: ' delimeter.
// Rquires a correctly formatted file. card => (Word :: Def + \n)
var create_deck = function (path) {
  // Get the contents of the file at the path.
  var file_buf = fs.readFileSync(path, {'encoding': 'ascii'});
  var file_string = file_buf.toString();

  // Split the file by newline.
  file_string = file_string.split('\n');

  // Split the file by ' :: '
  var word_def_pairs = [];

  file_string.forEach(function (line) {
    // Check for necessary delimeter.
    if (line.indexOf(' :: ') === -1) {
      console.log('Warning :: Incorrectly formatted string (len = ' + line.length.toString() + ') >' + line);
      return;
    }

    var this_pair = line.split(' :: ');

    // Check for two strings (word + definition)
    if (this_pair.length !== 2) {
      console.log('Warning :: Incorrectly formatted string (len = ' + line.length.toString() + ') >' + line);
      return;
    }

    word_def_pairs.push(line.split(' :: '));
  });


  // For each pair of strings, create a card and add it to a "deck"
  var deck = [];

  word_def_pairs.forEach(function(pair) {
    deck.push(create_card(pair[0], pair[1]));
  });

  return deck;
};

module.exports = create_deck;
